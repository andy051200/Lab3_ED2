

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 03 01:51:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0000                     	;# 
   449  0001                     	;# 
   450  0002                     	;# 
   451  0003                     	;# 
   452  0004                     	;# 
   453  0005                     	;# 
   454  0006                     	;# 
   455  0007                     	;# 
   456  0008                     	;# 
   457  0009                     	;# 
   458  000A                     	;# 
   459  000B                     	;# 
   460  000C                     	;# 
   461  000D                     	;# 
   462  000E                     	;# 
   463  000E                     	;# 
   464  000F                     	;# 
   465  0010                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0015                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0017                     	;# 
   474  0018                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  001D                     	;# 
   481  001E                     	;# 
   482  001F                     	;# 
   483  0081                     	;# 
   484  0085                     	;# 
   485  0086                     	;# 
   486  0087                     	;# 
   487  0088                     	;# 
   488  0089                     	;# 
   489  008C                     	;# 
   490  008D                     	;# 
   491  008E                     	;# 
   492  008F                     	;# 
   493  0090                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0093                     	;# 
   498  0093                     	;# 
   499  0094                     	;# 
   500  0095                     	;# 
   501  0096                     	;# 
   502  0097                     	;# 
   503  0098                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009C                     	;# 
   508  009D                     	;# 
   509  009E                     	;# 
   510  009F                     	;# 
   511  0105                     	;# 
   512  0107                     	;# 
   513  0108                     	;# 
   514  0109                     	;# 
   515  010C                     	;# 
   516  010C                     	;# 
   517  010D                     	;# 
   518  010E                     	;# 
   519  010F                     	;# 
   520  0185                     	;# 
   521  0187                     	;# 
   522  0188                     	;# 
   523  0189                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  0013                     _SSPBUF	set	19
   527  0014                     _SSPCON	set	20
   528  001F                     _ADCON0bits	set	31
   529  0018                     _RCSTAbits	set	24
   530  0008                     _PORTD	set	8
   531  0006                     _PORTB	set	6
   532  0007                     _PORTCbits	set	7
   533  0001                     _TMR0	set	1
   534  000B                     _INTCONbits	set	11
   535  000C                     _PIR1bits	set	12
   536  0094                     _SSPSTATbits	set	148
   537  0094                     _SSPSTAT	set	148
   538  009F                     _ADCON1bits	set	159
   539  008F                     _OSCCONbits	set	143
   540  008C                     _PIE1bits	set	140
   541  0099                     _SPBRG	set	153
   542  009A                     _SPBRGH	set	154
   543  0098                     _TXSTAbits	set	152
   544  0081                     _OPTION_REGbits	set	129
   545  0088                     _TRISD	set	136
   546  0087                     _TRISCbits	set	135
   547  0086                     _TRISB	set	134
   548  043B                     _TRISC3	set	1083
   549  0187                     _BAUDCTLbits	set	391
   550  0189                     _ANSELH	set	393
   551  0188                     _ANSEL	set	392
   552                           
   553                           	psect	cinit
   554  0011                     start_initialization:	
   555                           ; #config settings
   556                           
   557  0011                     __initialization:
   558                           
   559                           ; Clear objects allocated to COMMON
   560  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   561  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   562                           
   563                           ; Clear objects allocated to BANK0
   564  0013  1283               	bcf	3,5	;RP0=0, select bank0
   565  0014  1303               	bcf	3,6	;RP1=0, select bank0
   566  0015  01B3               	clrf	__pbssBANK0& (0+127)
   567  0016  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   568  0017  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   569  0018  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   570  0019  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   571  001A  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   572  001B  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   573  001C  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   574  001D  01BB               	clrf	(__pbssBANK0+8)& (0+127)
   575  001E  01BC               	clrf	(__pbssBANK0+9)& (0+127)
   576  001F  01BD               	clrf	(__pbssBANK0+10)& (0+127)
   577  0020                     end_of_initialization:	
   578                           ;End of C runtime variable initialization code
   579                           
   580  0020                     __end_of__initialization:
   581  0020  0183               	clrf	3
   582  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   583                           
   584                           	psect	bssCOMMON
   585  0076                     __pbssCOMMON:
   586  0076                     _cuenta_uart:
   587  0076                     	ds	1
   588  0077                     _cuenta2_timer0:
   589  0077                     	ds	1
   590                           
   591                           	psect	bssBANK0
   592  0033                     __pbssBANK0:
   593  0033                     _uart_dec_pot2:
   594  0033                     	ds	1
   595  0034                     _uart_cen_pot2:
   596  0034                     	ds	1
   597  0035                     _uart_dec_pot1:
   598  0035                     	ds	1
   599  0036                     _uart_cen_pot1:
   600  0036                     	ds	1
   601  0037                     _map_pot2_dec:
   602  0037                     	ds	1
   603  0038                     _map_pot2_cen:
   604  0038                     	ds	1
   605  0039                     _map_pot1_dec:
   606  0039                     	ds	1
   607  003A                     _map_pot1_cen:
   608  003A                     	ds	1
   609  003B                     _cuenta1_timer0:
   610  003B                     	ds	1
   611  003C                     _uart_recibido2:
   612  003C                     	ds	1
   613  003D                     _uart_recibido1:
   614  003D                     	ds	1
   615                           
   616                           	psect	cstackCOMMON
   617  0070                     __pcstackCOMMON:
   618  0070                     ?_mandar_datos:
   619  0070                     ??_mandar_datos:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_setup:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_spiWrite:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_spiRead:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_osc_config:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_isr:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_main:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_spiReceiveWait:	
   641                           ; 1 bytes @ 0x0
   642                           
   643                           
   644                           ; 1 bytes @ 0x0
   645  0070                     	ds	2
   646  0072                     ??_isr:
   647                           
   648                           ; 1 bytes @ 0x2
   649  0072                     	ds	4
   650  0076                     ??_setup:
   651  0076                     ??_spiWrite:	
   652                           ; 1 bytes @ 0x6
   653                           
   654  0076                     ??_spiRead:	
   655                           ; 1 bytes @ 0x6
   656                           
   657  0076                     ??_spiInit:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     ??_spiReceiveWait:	
   661                           ; 1 bytes @ 0x6
   662                           
   663                           
   664                           	psect	cstackBANK0
   665  0020                     __pcstackBANK0:	
   666                           ; 1 bytes @ 0x6
   667                           
   668  0020                     ??_osc_config:
   669  0020                     ?_spiInit:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0020                     ?___awdiv:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0020                     spiInit@sDataSample:	
   676                           ; 2 bytes @ 0x0
   677                           
   678  0020                     spiWrite@dat:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0020                     ___awdiv@divisor:	
   682                           ; 1 bytes @ 0x0
   683                           
   684                           
   685                           ; 2 bytes @ 0x0
   686  0020                     	ds	1
   687  0021                     spiInit@sClockIdle:
   688                           
   689                           ; 1 bytes @ 0x1
   690  0021                     	ds	1
   691  0022                     osc_config@freq:
   692  0022                     spiInit@sTransmitEdge:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  0022                     ___awdiv@dividend:	
   696                           ; 1 bytes @ 0x2
   697                           
   698                           
   699                           ; 2 bytes @ 0x2
   700  0022                     	ds	1
   701  0023                     spiInit@sType:
   702                           
   703                           ; 1 bytes @ 0x3
   704  0023                     	ds	1
   705  0024                     ??___awdiv:
   706                           
   707                           ; 1 bytes @ 0x4
   708  0024                     	ds	1
   709  0025                     ___awdiv@counter:
   710                           
   711                           ; 1 bytes @ 0x5
   712  0025                     	ds	1
   713  0026                     ___awdiv@sign:
   714                           
   715                           ; 1 bytes @ 0x6
   716  0026                     	ds	1
   717  0027                     ___awdiv@quotient:
   718                           
   719                           ; 2 bytes @ 0x7
   720  0027                     	ds	2
   721  0029                     ?___awmod:
   722  0029                     ___awmod@divisor:	
   723                           ; 2 bytes @ 0x9
   724                           
   725                           
   726                           ; 2 bytes @ 0x9
   727  0029                     	ds	2
   728  002B                     ___awmod@dividend:
   729                           
   730                           ; 2 bytes @ 0xB
   731  002B                     	ds	2
   732  002D                     ??___awmod:
   733                           
   734                           ; 1 bytes @ 0xD
   735  002D                     	ds	1
   736  002E                     ___awmod@counter:
   737                           
   738                           ; 1 bytes @ 0xE
   739  002E                     	ds	1
   740  002F                     ___awmod@sign:
   741                           
   742                           ; 1 bytes @ 0xF
   743  002F                     	ds	1
   744  0030                     ??_main:
   745                           
   746                           ; 1 bytes @ 0x10
   747  0030                     	ds	3
   748                           
   749                           	psect	maintext
   750  0024                     __pmaintext:	
   751 ;;
   752 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   753 ;;
   754 ;; *************** function _main *****************
   755 ;; Defined at:
   756 ;;		line 94 in file "Main_maestro.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : B00/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0
   772 ;;      Temps:          0       3       0       0       0
   773 ;;      Totals:         0       3       0       0       0
   774 ;;Total ram usage:        3 bytes
   775 ;; Hardware stack levels required when called:    4
   776 ;; This function calls:
   777 ;;		___awdiv
   778 ;;		___awmod
   779 ;;		_setup
   780 ;;		_spiRead
   781 ;;		_spiWrite
   782 ;; This function is called by:
   783 ;;		Startup code after reset
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function _main
   789  0024                     _main:
   790  0024                     l1639:	
   791                           ;incstack = 0
   792                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   793                           
   794                           
   795                           ;Main_maestro.c: 96:     setup();
   796  0024  120A  118A  21E5  120A  118A  	fcall	_setup
   797  0029  2852               	goto	l1649
   798  002A                     l88:	
   799                           ;Main_maestro.c: 100:         {;Main_maestro.c: 101:             case(0):
   800                           
   801                           
   802                           ;Main_maestro.c: 102:                 PORTCbits.RC2=0;
   803  002A  1107               	bcf	7,2	;volatile
   804                           
   805                           ;Main_maestro.c: 103:                 break;
   806  002B  286D               	goto	l1651
   807  002C                     l1641:
   808                           
   809                           ;Main_maestro.c: 106:                 spiWrite(1);
   810  002C  3001               	movlw	1
   811  002D  120A  118A  22EC  120A  118A  	fcall	_spiWrite
   812                           
   813                           ;Main_maestro.c: 107:                 uart_recibido1=spiRead();
   814  0032  120A  118A  22DC  120A  118A  	fcall	_spiRead
   815  0037  1283               	bcf	3,5	;RP0=0, select bank0
   816  0038  1303               	bcf	3,6	;RP1=0, select bank0
   817  0039  00B0               	movwf	??_main
   818  003A  0830               	movf	??_main,w
   819  003B  00BD               	movwf	_uart_recibido1
   820                           
   821                           ;Main_maestro.c: 108:                 break;
   822  003C  286D               	goto	l1651
   823  003D                     l1643:
   824                           
   825                           ;Main_maestro.c: 111:                 spiWrite(2);
   826  003D  3002               	movlw	2
   827  003E  120A  118A  22EC  120A  118A  	fcall	_spiWrite
   828                           
   829                           ;Main_maestro.c: 112:                 uart_recibido2=spiRead();
   830  0043  120A  118A  22DC  120A  118A  	fcall	_spiRead
   831  0048  1283               	bcf	3,5	;RP0=0, select bank0
   832  0049  1303               	bcf	3,6	;RP1=0, select bank0
   833  004A  00B0               	movwf	??_main
   834  004B  0830               	movf	??_main,w
   835  004C  00BC               	movwf	_uart_recibido2
   836                           
   837                           ;Main_maestro.c: 113:                 break;
   838  004D  286D               	goto	l1651
   839  004E                     l92:	
   840                           ;Main_maestro.c: 115:             case(10):
   841                           
   842                           
   843                           ;Main_maestro.c: 116:                 PORTCbits.RC2=1;
   844  004E  1507               	bsf	7,2	;volatile
   845                           
   846                           ;Main_maestro.c: 117:                 break;
   847  004F  286D               	goto	l1651
   848  0050                     l1645:
   849                           
   850                           ;Main_maestro.c: 120:                 cuenta1_timer0=0;
   851  0050  01BB               	clrf	_cuenta1_timer0
   852                           
   853                           ;Main_maestro.c: 121:                 break;
   854  0051  286D               	goto	l1651
   855  0052                     l1649:
   856  0052  1283               	bcf	3,5	;RP0=0, select bank0
   857  0053  1303               	bcf	3,6	;RP1=0, select bank0
   858  0054  083B               	movf	_cuenta1_timer0,w
   859  0055  00B0               	movwf	??_main
   860  0056  01B1               	clrf	??_main+1
   861                           
   862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   863                           ; Switch size 1, requested type "simple"
   864                           ; Number of cases is 1, Range of values is 0 to 0
   865                           ; switch strategies available:
   866                           ; Name         Instructions Cycles
   867                           ; simple_byte            4     3 (average)
   868                           ; direct_byte           11     8 (fixed)
   869                           ; jumptable            260     6 (fixed)
   870                           ;	Chosen strategy is simple_byte
   871  0057  0831               	movf	??_main+1,w
   872  0058  3A00               	xorlw	0	; case 0
   873  0059  1903               	skipnz
   874  005A  285C               	goto	l1739
   875  005B  286D               	goto	l1651
   876  005C                     l1739:
   877                           
   878                           ; Switch size 1, requested type "simple"
   879                           ; Number of cases is 5, Range of values is 0 to 249
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte           16     9 (average)
   883                           ; jumptable            260     6 (fixed)
   884                           ;	Chosen strategy is simple_byte
   885  005C  0830               	movf	??_main,w
   886  005D  3A00               	xorlw	0	; case 0
   887  005E  1903               	skipnz
   888  005F  282A               	goto	l88
   889  0060  3A02               	xorlw	2	; case 2
   890  0061  1903               	skipnz
   891  0062  282C               	goto	l1641
   892  0063  3A0A               	xorlw	10	; case 8
   893  0064  1903               	skipnz
   894  0065  283D               	goto	l1643
   895  0066  3A02               	xorlw	2	; case 10
   896  0067  1903               	skipnz
   897  0068  284E               	goto	l92
   898  0069  3AF3               	xorlw	243	; case 249
   899  006A  1903               	skipnz
   900  006B  2850               	goto	l1645
   901  006C  286D               	goto	l1651
   902  006D                     l1651:
   903                           
   904                           ;Main_maestro.c: 125:         map_pot1_cen=((2*(uart_recibido1)/100)%10);
   905  006D  300A               	movlw	10
   906  006E  00A9               	movwf	___awmod@divisor
   907  006F  3000               	movlw	0
   908  0070  00AA               	movwf	___awmod@divisor+1
   909  0071  3064               	movlw	100
   910  0072  00A0               	movwf	___awdiv@divisor
   911  0073  3000               	movlw	0
   912  0074  00A1               	movwf	___awdiv@divisor+1
   913  0075  083D               	movf	_uart_recibido1,w
   914  0076  00B0               	movwf	??_main
   915  0077  01B1               	clrf	??_main+1
   916  0078  1003               	clrc
   917  0079  0D30               	rlf	??_main,w
   918  007A  00A2               	movwf	___awdiv@dividend
   919  007B  0D31               	rlf	??_main+1,w
   920  007C  00A3               	movwf	___awdiv@dividend+1
   921  007D  120A  118A  2121  120A  118A  	fcall	___awdiv
   922  0082  1283               	bcf	3,5	;RP0=0, select bank0
   923  0083  1303               	bcf	3,6	;RP1=0, select bank0
   924  0084  0821               	movf	?___awdiv+1,w
   925  0085  00AC               	movwf	___awmod@dividend+1
   926  0086  0820               	movf	?___awdiv,w
   927  0087  00AB               	movwf	___awmod@dividend
   928  0088  120A  118A  218A  120A  118A  	fcall	___awmod
   929  008D  1283               	bcf	3,5	;RP0=0, select bank0
   930  008E  1303               	bcf	3,6	;RP1=0, select bank0
   931  008F  0829               	movf	?___awmod,w
   932  0090  00B2               	movwf	??_main+2
   933  0091  0832               	movf	??_main+2,w
   934  0092  00BA               	movwf	_map_pot1_cen
   935                           
   936                           ;Main_maestro.c: 126:         map_pot1_dec=((2*(uart_recibido1)/10)%10);
   937  0093  300A               	movlw	10
   938  0094  00A9               	movwf	___awmod@divisor
   939  0095  3000               	movlw	0
   940  0096  00AA               	movwf	___awmod@divisor+1
   941  0097  300A               	movlw	10
   942  0098  00A0               	movwf	___awdiv@divisor
   943  0099  3000               	movlw	0
   944  009A  00A1               	movwf	___awdiv@divisor+1
   945  009B  083D               	movf	_uart_recibido1,w
   946  009C  00B0               	movwf	??_main
   947  009D  01B1               	clrf	??_main+1
   948  009E  1003               	clrc
   949  009F  0D30               	rlf	??_main,w
   950  00A0  00A2               	movwf	___awdiv@dividend
   951  00A1  0D31               	rlf	??_main+1,w
   952  00A2  00A3               	movwf	___awdiv@dividend+1
   953  00A3  120A  118A  2121  120A  118A  	fcall	___awdiv
   954  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   955  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   956  00AA  0821               	movf	?___awdiv+1,w
   957  00AB  00AC               	movwf	___awmod@dividend+1
   958  00AC  0820               	movf	?___awdiv,w
   959  00AD  00AB               	movwf	___awmod@dividend
   960  00AE  120A  118A  218A  120A  118A  	fcall	___awmod
   961  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   962  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   963  00B5  0829               	movf	?___awmod,w
   964  00B6  00B2               	movwf	??_main+2
   965  00B7  0832               	movf	??_main+2,w
   966  00B8  00B9               	movwf	_map_pot1_dec
   967                           
   968                           ;Main_maestro.c: 129:         map_pot2_cen=((2*(uart_recibido2)/100)%10);
   969  00B9  300A               	movlw	10
   970  00BA  00A9               	movwf	___awmod@divisor
   971  00BB  3000               	movlw	0
   972  00BC  00AA               	movwf	___awmod@divisor+1
   973  00BD  3064               	movlw	100
   974  00BE  00A0               	movwf	___awdiv@divisor
   975  00BF  3000               	movlw	0
   976  00C0  00A1               	movwf	___awdiv@divisor+1
   977  00C1  083C               	movf	_uart_recibido2,w
   978  00C2  00B0               	movwf	??_main
   979  00C3  01B1               	clrf	??_main+1
   980  00C4  1003               	clrc
   981  00C5  0D30               	rlf	??_main,w
   982  00C6  00A2               	movwf	___awdiv@dividend
   983  00C7  0D31               	rlf	??_main+1,w
   984  00C8  00A3               	movwf	___awdiv@dividend+1
   985  00C9  120A  118A  2121  120A  118A  	fcall	___awdiv
   986  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   987  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   988  00D0  0821               	movf	?___awdiv+1,w
   989  00D1  00AC               	movwf	___awmod@dividend+1
   990  00D2  0820               	movf	?___awdiv,w
   991  00D3  00AB               	movwf	___awmod@dividend
   992  00D4  120A  118A  218A  120A  118A  	fcall	___awmod
   993  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   994  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   995  00DB  0829               	movf	?___awmod,w
   996  00DC  00B2               	movwf	??_main+2
   997  00DD  0832               	movf	??_main+2,w
   998  00DE  00B8               	movwf	_map_pot2_cen
   999                           
  1000                           ;Main_maestro.c: 130:         map_pot2_dec=((2*(uart_recibido2)/10)%10);
  1001  00DF  300A               	movlw	10
  1002  00E0  00A9               	movwf	___awmod@divisor
  1003  00E1  3000               	movlw	0
  1004  00E2  00AA               	movwf	___awmod@divisor+1
  1005  00E3  300A               	movlw	10
  1006  00E4  00A0               	movwf	___awdiv@divisor
  1007  00E5  3000               	movlw	0
  1008  00E6  00A1               	movwf	___awdiv@divisor+1
  1009  00E7  083C               	movf	_uart_recibido2,w
  1010  00E8  00B0               	movwf	??_main
  1011  00E9  01B1               	clrf	??_main+1
  1012  00EA  1003               	clrc
  1013  00EB  0D30               	rlf	??_main,w
  1014  00EC  00A2               	movwf	___awdiv@dividend
  1015  00ED  0D31               	rlf	??_main+1,w
  1016  00EE  00A3               	movwf	___awdiv@dividend+1
  1017  00EF  120A  118A  2121  120A  118A  	fcall	___awdiv
  1018  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1019  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1020  00F6  0821               	movf	?___awdiv+1,w
  1021  00F7  00AC               	movwf	___awmod@dividend+1
  1022  00F8  0820               	movf	?___awdiv,w
  1023  00F9  00AB               	movwf	___awmod@dividend
  1024  00FA  120A  118A  218A  120A  118A  	fcall	___awmod
  1025  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0101  0829               	movf	?___awmod,w
  1028  0102  00B2               	movwf	??_main+2
  1029  0103  0832               	movf	??_main+2,w
  1030  0104  00B7               	movwf	_map_pot2_dec
  1031  0105                     l1653:
  1032                           
  1033                           ;Main_maestro.c: 133:         uart_cen_pot1=(map_pot1_cen+0x30);
  1034  0105  083A               	movf	_map_pot1_cen,w
  1035  0106  3E30               	addlw	48
  1036  0107  00B0               	movwf	??_main
  1037  0108  0830               	movf	??_main,w
  1038  0109  00B6               	movwf	_uart_cen_pot1
  1039  010A                     l1655:
  1040                           
  1041                           ;Main_maestro.c: 134:         uart_dec_pot1=(map_pot1_dec+0x30);
  1042  010A  0839               	movf	_map_pot1_dec,w
  1043  010B  3E30               	addlw	48
  1044  010C  00B0               	movwf	??_main
  1045  010D  0830               	movf	??_main,w
  1046  010E  00B5               	movwf	_uart_dec_pot1
  1047  010F                     l1657:
  1048                           
  1049                           ;Main_maestro.c: 137:         uart_cen_pot2=(map_pot2_cen+0x30);
  1050  010F  0838               	movf	_map_pot2_cen,w
  1051  0110  3E30               	addlw	48
  1052  0111  00B0               	movwf	??_main
  1053  0112  0830               	movf	??_main,w
  1054  0113  00B4               	movwf	_uart_cen_pot2
  1055  0114                     l1659:
  1056                           
  1057                           ;Main_maestro.c: 138:         uart_dec_pot2=(map_pot2_dec+0x30);
  1058  0114  0837               	movf	_map_pot2_dec,w
  1059  0115  3E30               	addlw	48
  1060  0116  00B0               	movwf	??_main
  1061  0117  0830               	movf	??_main,w
  1062  0118  00B3               	movwf	_uart_dec_pot2
  1063  0119                     l1661:
  1064                           
  1065                           ;Main_maestro.c: 141:         PORTB=uart_recibido1;
  1066  0119  083D               	movf	_uart_recibido1,w
  1067  011A  0086               	movwf	6	;volatile
  1068  011B                     l1663:
  1069                           
  1070                           ;Main_maestro.c: 142:         PORTD=uart_recibido2;
  1071  011B  083C               	movf	_uart_recibido2,w
  1072  011C  0088               	movwf	8	;volatile
  1073  011D  2852               	goto	l1649
  1074  011E  120A  118A  280E   	ljmp	start
  1075  0121                     __end_of_main:
  1076                           
  1077                           	psect	text1
  1078  02EC                     __ptext1:	
  1079 ;; *************** function _spiWrite *****************
  1080 ;; Defined at:
  1081 ;;		line 43 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  dat             1    wreg     unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  dat             1    0[BANK0 ] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0       1       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         0       1       0       0       0
  1099 ;;Total ram usage:        1 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    2
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _spiWrite
  1111  02EC                     _spiWrite:
  1112                           
  1113                           ;incstack = 0
  1114                           ; Regs used in _spiWrite: [wreg]
  1115                           ;spiWrite@dat stored from wreg
  1116  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1117  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1118  02EE  00A0               	movwf	spiWrite@dat
  1119  02EF                     l1555:
  1120                           
  1121                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 43: vo
      +                          id spiWrite(char dat);C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X
      +                          /SPI_config.c: 44: {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/
      +                          SPI_config.c: 45:     SSPBUF = dat;
  1122  02EF  0820               	movf	spiWrite@dat,w
  1123  02F0  0093               	movwf	19	;volatile
  1124  02F1                     l173:
  1125  02F1  0008               	return
  1126  02F2                     __end_of_spiWrite:
  1127                           
  1128                           	psect	text2
  1129  02DC                     __ptext2:	
  1130 ;; *************** function _spiRead *****************
  1131 ;; Defined at:
  1132 ;;		line 56 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      unsigned char 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    3
  1153 ;; This function calls:
  1154 ;;		_spiReceiveWait
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _spiRead
  1162  02DC                     _spiRead:
  1163  02DC                     l1243:	
  1164                           ;incstack = 0
  1165                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1166                           
  1167                           
  1168                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 58:   
      +                            spiReceiveWait();
  1169  02DC  120A  118A  22E5  120A  118A  	fcall	_spiReceiveWait
  1170  02E1                     l1245:
  1171                           
  1172                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 59:   
      +                            return(SSPBUF);
  1173  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1174  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1175  02E3  0813               	movf	19,w	;volatile
  1176  02E4                     l181:
  1177  02E4  0008               	return
  1178  02E5                     __end_of_spiRead:
  1179                           
  1180                           	psect	text3
  1181  02E5                     __ptext3:	
  1182 ;; *************** function _spiReceiveWait *****************
  1183 ;; Defined at:
  1184 ;;		line 38 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		None
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    2
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_spiRead
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _spiReceiveWait
  1214  02E5                     _spiReceiveWait:
  1215  02E5                     l1157:	
  1216                           ;incstack = 0
  1217                           ; Regs used in _spiReceiveWait: []
  1218                           
  1219  02E5                     l167:	
  1220                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 40:   
      +                            while ( !SSPSTATbits.BF );
  1221                           
  1222  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1223  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  1224  02E7  1C14               	btfss	20,0	;volatile
  1225  02E8  2AEA               	goto	u251
  1226  02E9  2AEB               	goto	u250
  1227  02EA                     u251:
  1228  02EA  2AE5               	goto	l167
  1229  02EB                     u250:
  1230  02EB                     l170:
  1231  02EB  0008               	return
  1232  02EC                     __end_of_spiReceiveWait:
  1233                           
  1234                           	psect	text4
  1235  01E5                     __ptext4:	
  1236 ;; *************** function _setup *****************
  1237 ;; Defined at:
  1238 ;;		line 150 in file "Main_maestro.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0
  1255 ;;      Totals:         0       0       0       0       0
  1256 ;;Total ram usage:        0 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    3
  1259 ;; This function calls:
  1260 ;;		_osc_config
  1261 ;;		_spiInit
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _setup
  1269  01E5                     _setup:
  1270  01E5                     l1485:	
  1271                           ;incstack = 0
  1272                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1273                           
  1274                           
  1275                           ;Main_maestro.c: 153:     ANSEL=0;
  1276  01E5  1683               	bsf	3,5	;RP0=1, select bank3
  1277  01E6  1703               	bsf	3,6	;RP1=1, select bank3
  1278  01E7  0188               	clrf	8	;volatile
  1279                           
  1280                           ;Main_maestro.c: 154:     ANSELH=0;
  1281  01E8  0189               	clrf	9	;volatile
  1282                           
  1283                           ;Main_maestro.c: 157:     TRISB=0;
  1284  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  1285  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  1286  01EB  0186               	clrf	6	;volatile
  1287  01EC                     l1487:
  1288                           
  1289                           ;Main_maestro.c: 158:     TRISCbits.TRISC2=0;
  1290  01EC  1107               	bcf	7,2	;volatile
  1291  01ED                     l1489:
  1292                           
  1293                           ;Main_maestro.c: 159:     TRISCbits.TRISC3=0;
  1294  01ED  1187               	bcf	7,3	;volatile
  1295  01EE                     l1491:
  1296                           
  1297                           ;Main_maestro.c: 160:     TRISCbits.TRISC4=1;
  1298  01EE  1607               	bsf	7,4	;volatile
  1299  01EF                     l1493:
  1300                           
  1301                           ;Main_maestro.c: 161:     TRISCbits.TRISC6=0;
  1302  01EF  1307               	bcf	7,6	;volatile
  1303  01F0                     l1495:
  1304                           
  1305                           ;Main_maestro.c: 162:     TRISCbits.TRISC7=1;
  1306  01F0  1787               	bsf	7,7	;volatile
  1307                           
  1308                           ;Main_maestro.c: 163:     TRISD=0;
  1309  01F1  0188               	clrf	8	;volatile
  1310                           
  1311                           ;Main_maestro.c: 167:     PORTB=0;
  1312  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1313  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1314  01F4  0186               	clrf	6	;volatile
  1315  01F5                     l1497:
  1316                           
  1317                           ;Main_maestro.c: 168:     PORTCbits.RC2=1;
  1318  01F5  1507               	bsf	7,2	;volatile
  1319                           
  1320                           ;Main_maestro.c: 169:     PORTD=0;
  1321  01F6  0188               	clrf	8	;volatile
  1322  01F7                     l1499:
  1323                           
  1324                           ;Main_maestro.c: 172:     OPTION_REGbits.T0CS = 0;
  1325  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1326  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1327  01F9  1281               	bcf	1,5	;volatile
  1328  01FA                     l1501:
  1329                           
  1330                           ;Main_maestro.c: 173:     OPTION_REGbits.T0SE = 0;
  1331  01FA  1201               	bcf	1,4	;volatile
  1332  01FB                     l1503:
  1333                           
  1334                           ;Main_maestro.c: 174:     OPTION_REGbits.PSA = 0;
  1335  01FB  1181               	bcf	1,3	;volatile
  1336  01FC                     l1505:
  1337                           
  1338                           ;Main_maestro.c: 175:     OPTION_REGbits.PS2 = 1;
  1339  01FC  1501               	bsf	1,2	;volatile
  1340  01FD                     l1507:
  1341                           
  1342                           ;Main_maestro.c: 176:     OPTION_REGbits.PS1 = 1;
  1343  01FD  1481               	bsf	1,1	;volatile
  1344  01FE                     l1509:
  1345                           
  1346                           ;Main_maestro.c: 177:     OPTION_REGbits.PS0 = 1;
  1347  01FE  1401               	bsf	1,0	;volatile
  1348  01FF                     l1511:
  1349                           
  1350                           ;Main_maestro.c: 178:     TMR0 = 255;
  1351  01FF  30FF               	movlw	255
  1352  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0202  0081               	movwf	1	;volatile
  1355  0203                     l1513:
  1356                           
  1357                           ;Main_maestro.c: 182:     osc_config(4);
  1358  0203  3004               	movlw	4
  1359  0204  120A  118A  2235  120A  118A  	fcall	_osc_config
  1360  0209                     l1515:
  1361                           
  1362                           ;Main_maestro.c: 184:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK
      +                          _IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1363  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1364  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1365  020B  01A0               	clrf	spiInit@sDataSample
  1366  020C  01A1               	clrf	spiInit@sClockIdle
  1367  020D  01A2               	clrf	spiInit@sTransmitEdge
  1368  020E  3020               	movlw	32
  1369  020F  120A  118A  22BE  120A  118A  	fcall	_spiInit
  1370  0214                     l1517:
  1371                           
  1372                           ;Main_maestro.c: 187:     TXSTAbits.TX9 = 0;
  1373  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1374  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1375  0216  1318               	bcf	24,6	;volatile
  1376  0217                     l1519:
  1377                           
  1378                           ;Main_maestro.c: 188:     TXSTAbits.SYNC = 0;
  1379  0217  1218               	bcf	24,4	;volatile
  1380  0218                     l1521:
  1381                           
  1382                           ;Main_maestro.c: 189:     TXSTAbits.BRGH = 1;
  1383  0218  1518               	bsf	24,2	;volatile
  1384  0219                     l1523:
  1385                           
  1386                           ;Main_maestro.c: 190:     BAUDCTLbits.BRG16 = 0;
  1387  0219  1683               	bsf	3,5	;RP0=1, select bank3
  1388  021A  1703               	bsf	3,6	;RP1=1, select bank3
  1389  021B  1187               	bcf	7,3	;volatile
  1390  021C                     l1525:
  1391                           
  1392                           ;Main_maestro.c: 191:     SPBRGH = 0;
  1393  021C  1683               	bsf	3,5	;RP0=1, select bank1
  1394  021D  1303               	bcf	3,6	;RP1=0, select bank1
  1395  021E  019A               	clrf	26	;volatile
  1396  021F                     l1527:
  1397                           
  1398                           ;Main_maestro.c: 192:     SPBRG = 25;
  1399  021F  3019               	movlw	25
  1400  0220  0099               	movwf	25	;volatile
  1401  0221                     l1529:
  1402                           
  1403                           ;Main_maestro.c: 193:     PIE1bits.TXIE = 1;
  1404  0221  160C               	bsf	12,4	;volatile
  1405  0222                     l1531:
  1406                           
  1407                           ;Main_maestro.c: 194:     TXSTAbits.TXEN = 1;
  1408  0222  1698               	bsf	24,5	;volatile
  1409  0223                     l1533:
  1410                           
  1411                           ;Main_maestro.c: 197:     RCSTAbits.SPEN = 1;
  1412  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0225  1798               	bsf	24,7	;volatile
  1415  0226                     l1535:
  1416                           
  1417                           ;Main_maestro.c: 198:     RCSTAbits. RX9 = 0;
  1418  0226  1318               	bcf	24,6	;volatile
  1419  0227                     l1537:
  1420                           
  1421                           ;Main_maestro.c: 199:     RCSTAbits.CREN = 1;
  1422  0227  1618               	bsf	24,4	;volatile
  1423  0228                     l1539:
  1424                           
  1425                           ;Main_maestro.c: 203:     INTCONbits.GIE=1;
  1426  0228  178B               	bsf	11,7	;volatile
  1427  0229                     l1541:
  1428                           
  1429                           ;Main_maestro.c: 204:     INTCONbits.PEIE=1;
  1430  0229  170B               	bsf	11,6	;volatile
  1431  022A                     l1543:
  1432                           
  1433                           ;Main_maestro.c: 205:     INTCONbits.T0IE=1;
  1434  022A  168B               	bsf	11,5	;volatile
  1435  022B                     l1545:
  1436                           
  1437                           ;Main_maestro.c: 206:     INTCONbits.T0IF=0;
  1438  022B  110B               	bcf	11,2	;volatile
  1439  022C                     l1547:
  1440                           
  1441                           ;Main_maestro.c: 207:     PIE1bits.TXIE=1;
  1442  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1443  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1444  022E  160C               	bsf	12,4	;volatile
  1445  022F                     l1549:
  1446                           
  1447                           ;Main_maestro.c: 208:     PIE1bits.RCIE=1;
  1448  022F  168C               	bsf	12,5	;volatile
  1449  0230                     l1551:
  1450                           
  1451                           ;Main_maestro.c: 209:     PIR1bits.TXIF=0;
  1452  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0232  120C               	bcf	12,4	;volatile
  1455  0233                     l1553:
  1456                           
  1457                           ;Main_maestro.c: 210:     PIR1bits.RCIF=0;
  1458  0233  128C               	bcf	12,5	;volatile
  1459  0234                     l99:
  1460  0234  0008               	return
  1461  0235                     __end_of_setup:
  1462                           
  1463                           	psect	text5
  1464  02BE                     __ptext5:	
  1465 ;; *************** function _spiInit *****************
  1466 ;; Defined at:
  1467 ;;		line 21 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  sType           1    wreg     enum E1292
  1470 ;;  sDataSample     1    0[BANK0 ] enum E1300
  1471 ;;  sClockIdle      1    1[BANK0 ] enum E1304
  1472 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  sType           1    3[BANK0 ] enum E1292
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       3       0       0       0
  1485 ;;      Locals:         0       1       0       0       0
  1486 ;;      Temps:          0       0       0       0       0
  1487 ;;      Totals:         0       4       0       0       0
  1488 ;;Total ram usage:        4 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    2
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_setup
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _spiInit
  1500  02BE                     _spiInit:
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1504                           ;spiInit@sType stored from wreg
  1505  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1506  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1507  02C0  00A3               	movwf	spiInit@sType
  1508  02C1                     l1475:
  1509                           
  1510                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 21: vo
      +                          id spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClockIdle, Spi_T
      +                          ransmit_Edge sTransmitEdge);C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Mae
      +                          stro.X/SPI_config.c: 22: {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maes
      +                          tro.X/SPI_config.c: 23:     TRISCbits.TRISC5 = 0;
  1511  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  1512  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  1513  02C3  1287               	bcf	7,5	;volatile
  1514                           
  1515                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 24:   
      +                            if(sType & 0b00000100)
  1516  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1517  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1518  02C6  1D23               	btfss	spiInit@sType,2
  1519  02C7  2AC9               	goto	u471
  1520  02C8  2ACA               	goto	u470
  1521  02C9                     u471:
  1522  02C9  2AD0               	goto	l1481
  1523  02CA                     u470:
  1524  02CA                     l1477:
  1525                           
  1526                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 25:   
      +                            {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 26:
      +                                   SSPSTAT = sTransmitEdge;
  1527  02CA  0822               	movf	spiInit@sTransmitEdge,w
  1528  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  1529  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  1530  02CD  0094               	movwf	20	;volatile
  1531  02CE                     l1479:
  1532                           
  1533                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 27:   
      +                                TRISC3 = 1;
  1534  02CE  1587               	bsf	7,3	;volatile
  1535                           
  1536                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 28:   
      +                            }
  1537  02CF  2AD6               	goto	l163
  1538  02D0                     l1481:
  1539                           
  1540                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 30:   
      +                            {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 31:
      +                                   SSPSTAT = sDataSample | sTransmitEdge;
  1541  02D0  0820               	movf	spiInit@sDataSample,w
  1542  02D1  0422               	iorwf	spiInit@sTransmitEdge,w
  1543  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1544  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  1545  02D4  0094               	movwf	20	;volatile
  1546  02D5                     l1483:
  1547                           
  1548                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 32:   
      +                                TRISC3 = 0;
  1549  02D5  1187               	bcf	7,3	;volatile
  1550  02D6                     l163:	
  1551                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 33:   
      +                            }
  1552                           
  1553                           
  1554                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/SPI_config.c: 35:   
      +                            SSPCON = sType | sClockIdle;
  1555  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  1556  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  1557  02D8  0823               	movf	spiInit@sType,w
  1558  02D9  0421               	iorwf	spiInit@sClockIdle,w
  1559  02DA  0094               	movwf	20	;volatile
  1560  02DB                     l164:
  1561  02DB  0008               	return
  1562  02DC                     __end_of_spiInit:
  1563                           
  1564                           	psect	text6
  1565  0235                     __ptext6:	
  1566 ;; *************** function _osc_config *****************
  1567 ;; Defined at:
  1568 ;;		line 16 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  freq            1    wreg     unsigned char 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  freq            1    2[BANK0 ] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       0       0       0       0
  1583 ;;      Locals:         0       1       0       0       0
  1584 ;;      Temps:          0       2       0       0       0
  1585 ;;      Totals:         0       3       0       0       0
  1586 ;;Total ram usage:        3 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    2
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_setup
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _osc_config
  1598  0235                     _osc_config:
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _osc_config: [wreg-fsr0h+status,2+status,0]
  1602                           ;osc_config@freq stored from wreg
  1603  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0237  00A2               	movwf	osc_config@freq
  1606  0238                     l1447:
  1607                           
  1608                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 16: vo
      +                          id osc_config(uint8_t freq);C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Mae
      +                          stro.X/Osc_config.c: 17: {;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maes
      +                          tro.X/Osc_config.c: 18:     switch(freq)
  1609  0238  2A57               	goto	l1467
  1610  0239                     l1449:
  1611                           
  1612                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 21:   
      +                                    OSCCONbits.IRCF=0b100;
  1613  0239  1683               	bsf	3,5	;RP0=1, select bank1
  1614  023A  1303               	bcf	3,6	;RP1=0, select bank1
  1615  023B  080F               	movf	15,w	;volatile
  1616  023C  398F               	andlw	-113
  1617  023D  3840               	iorlw	64
  1618  023E  008F               	movwf	15	;volatile
  1619  023F                     l1451:
  1620                           
  1621                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 22:   
      +                                    OSCCONbits.SCS=1;
  1622  023F  140F               	bsf	15,0	;volatile
  1623                           
  1624                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 23:   
      +                                    break;
  1625  0240  2A6D               	goto	l123
  1626  0241                     l1453:
  1627                           
  1628                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 26:   
      +                                    OSCCONbits.IRCF=0b101;
  1629  0241  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0242  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0243  080F               	movf	15,w	;volatile
  1632  0244  398F               	andlw	-113
  1633  0245  3850               	iorlw	80
  1634  0246  008F               	movwf	15	;volatile
  1635  0247                     l1455:
  1636                           
  1637                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 27:   
      +                                    OSCCONbits.SCS=1;
  1638  0247  140F               	bsf	15,0	;volatile
  1639                           
  1640                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 28:   
      +                                    break;
  1641  0248  2A6D               	goto	l123
  1642  0249                     l1457:
  1643                           
  1644                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 31:   
      +                                    OSCCONbits.IRCF=0b110;
  1645  0249  1683               	bsf	3,5	;RP0=1, select bank1
  1646  024A  1303               	bcf	3,6	;RP1=0, select bank1
  1647  024B  080F               	movf	15,w	;volatile
  1648  024C  398F               	andlw	-113
  1649  024D  3860               	iorlw	96
  1650  024E  008F               	movwf	15	;volatile
  1651  024F                     l1459:
  1652                           
  1653                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 32:   
      +                                    OSCCONbits.SCS=1;
  1654  024F  140F               	bsf	15,0	;volatile
  1655                           
  1656                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 33:   
      +                                    break;
  1657  0250  2A6D               	goto	l123
  1658  0251                     l1461:
  1659                           
  1660                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 36:   
      +                                    OSCCONbits.IRCF=0b111;
  1661  0251  3070               	movlw	112
  1662  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0254  048F               	iorwf	15,f	;volatile
  1665  0255                     l1463:
  1666                           
  1667                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 37:   
      +                                    OSCCONbits.SCS=1;
  1668  0255  140F               	bsf	15,0	;volatile
  1669                           
  1670                           ;C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab3_ED2/Lab3_Maestro.X/Osc_config.c: 38:   
      +                                    break;
  1671  0256  2A6D               	goto	l123
  1672  0257                     l1467:
  1673  0257  0822               	movf	osc_config@freq,w
  1674  0258  00A0               	movwf	??_osc_config
  1675  0259  01A1               	clrf	??_osc_config+1
  1676                           
  1677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 1, Range of values is 0 to 0
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte            4     3 (average)
  1683                           ; direct_byte           11     8 (fixed)
  1684                           ; jumptable            260     6 (fixed)
  1685                           ;	Chosen strategy is simple_byte
  1686  025A  0821               	movf	??_osc_config+1,w
  1687  025B  3A00               	xorlw	0	; case 0
  1688  025C  1903               	skipnz
  1689  025D  2A5F               	goto	l1741
  1690  025E  2A6D               	goto	l123
  1691  025F                     l1741:
  1692                           
  1693                           ; Switch size 1, requested type "simple"
  1694                           ; Number of cases is 4, Range of values is 1 to 8
  1695                           ; switch strategies available:
  1696                           ; Name         Instructions Cycles
  1697                           ; simple_byte           13     7 (average)
  1698                           ; direct_byte           35    11 (fixed)
  1699                           ; jumptable            263     9 (fixed)
  1700                           ;	Chosen strategy is simple_byte
  1701  025F  0820               	movf	??_osc_config,w
  1702  0260  3A01               	xorlw	1	; case 1
  1703  0261  1903               	skipnz
  1704  0262  2A39               	goto	l1449
  1705  0263  3A03               	xorlw	3	; case 2
  1706  0264  1903               	skipnz
  1707  0265  2A41               	goto	l1453
  1708  0266  3A06               	xorlw	6	; case 4
  1709  0267  1903               	skipnz
  1710  0268  2A49               	goto	l1457
  1711  0269  3A0C               	xorlw	12	; case 8
  1712  026A  1903               	skipnz
  1713  026B  2A51               	goto	l1461
  1714  026C  2A6D               	goto	l123
  1715  026D                     l123:
  1716  026D  0008               	return
  1717  026E                     __end_of_osc_config:
  1718                           
  1719                           	psect	text7
  1720  018A                     __ptext7:	
  1721 ;; *************** function ___awmod *****************
  1722 ;; Defined at:
  1723 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  divisor         2    9[BANK0 ] int 
  1726 ;;  dividend        2   11[BANK0 ] int 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  sign            1   15[BANK0 ] unsigned char 
  1729 ;;  counter         1   14[BANK0 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  2    9[BANK0 ] int 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       4       0       0       0
  1740 ;;      Locals:         0       2       0       0       0
  1741 ;;      Temps:          0       1       0       0       0
  1742 ;;      Totals:         0       7       0       0       0
  1743 ;;Total ram usage:        7 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    2
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function ___awmod
  1755  018A                     ___awmod:
  1756  018A                     l1601:	
  1757                           ;incstack = 0
  1758                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1759                           
  1760  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1761  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1762  018C  01AF               	clrf	___awmod@sign
  1763  018D                     l1603:
  1764  018D  1FAC               	btfss	___awmod@dividend+1,7
  1765  018E  2990               	goto	u581
  1766  018F  2991               	goto	u580
  1767  0190                     u581:
  1768  0190  2998               	goto	l1609
  1769  0191                     u580:
  1770  0191                     l1605:
  1771  0191  09AB               	comf	___awmod@dividend,f
  1772  0192  09AC               	comf	___awmod@dividend+1,f
  1773  0193  0AAB               	incf	___awmod@dividend,f
  1774  0194  1903               	skipnz
  1775  0195  0AAC               	incf	___awmod@dividend+1,f
  1776  0196                     l1607:
  1777  0196  01AF               	clrf	___awmod@sign
  1778  0197  0AAF               	incf	___awmod@sign,f
  1779  0198                     l1609:
  1780  0198  1FAA               	btfss	___awmod@divisor+1,7
  1781  0199  299B               	goto	u591
  1782  019A  299C               	goto	u590
  1783  019B                     u591:
  1784  019B  29A1               	goto	l1613
  1785  019C                     u590:
  1786  019C                     l1611:
  1787  019C  09A9               	comf	___awmod@divisor,f
  1788  019D  09AA               	comf	___awmod@divisor+1,f
  1789  019E  0AA9               	incf	___awmod@divisor,f
  1790  019F  1903               	skipnz
  1791  01A0  0AAA               	incf	___awmod@divisor+1,f
  1792  01A1                     l1613:
  1793  01A1  0829               	movf	___awmod@divisor,w
  1794  01A2  042A               	iorwf	___awmod@divisor+1,w
  1795  01A3  1903               	btfsc	3,2
  1796  01A4  29A6               	goto	u601
  1797  01A5  29A7               	goto	u600
  1798  01A6                     u601:
  1799  01A6  29D6               	goto	l1631
  1800  01A7                     u600:
  1801  01A7                     l1615:
  1802  01A7  01AE               	clrf	___awmod@counter
  1803  01A8  0AAE               	incf	___awmod@counter,f
  1804  01A9  29B5               	goto	l1621
  1805  01AA                     l1617:
  1806  01AA  3001               	movlw	1
  1807  01AB                     u615:
  1808  01AB  1003               	clrc
  1809  01AC  0DA9               	rlf	___awmod@divisor,f
  1810  01AD  0DAA               	rlf	___awmod@divisor+1,f
  1811  01AE  3EFF               	addlw	-1
  1812  01AF  1D03               	skipz
  1813  01B0  29AB               	goto	u615
  1814  01B1                     l1619:
  1815  01B1  3001               	movlw	1
  1816  01B2  00AD               	movwf	??___awmod
  1817  01B3  082D               	movf	??___awmod,w
  1818  01B4  07AE               	addwf	___awmod@counter,f
  1819  01B5                     l1621:
  1820  01B5  1FAA               	btfss	___awmod@divisor+1,7
  1821  01B6  29B8               	goto	u621
  1822  01B7  29B9               	goto	u620
  1823  01B8                     u621:
  1824  01B8  29AA               	goto	l1617
  1825  01B9                     u620:
  1826  01B9                     l1623:
  1827  01B9  082A               	movf	___awmod@divisor+1,w
  1828  01BA  022C               	subwf	___awmod@dividend+1,w
  1829  01BB  1D03               	skipz
  1830  01BC  29BF               	goto	u635
  1831  01BD  0829               	movf	___awmod@divisor,w
  1832  01BE  022B               	subwf	___awmod@dividend,w
  1833  01BF                     u635:
  1834  01BF  1C03               	skipc
  1835  01C0  29C2               	goto	u631
  1836  01C1  29C3               	goto	u630
  1837  01C2                     u631:
  1838  01C2  29C9               	goto	l1627
  1839  01C3                     u630:
  1840  01C3                     l1625:
  1841  01C3  0829               	movf	___awmod@divisor,w
  1842  01C4  02AB               	subwf	___awmod@dividend,f
  1843  01C5  082A               	movf	___awmod@divisor+1,w
  1844  01C6  1C03               	skipc
  1845  01C7  03AC               	decf	___awmod@dividend+1,f
  1846  01C8  02AC               	subwf	___awmod@dividend+1,f
  1847  01C9                     l1627:
  1848  01C9  3001               	movlw	1
  1849  01CA                     u645:
  1850  01CA  1003               	clrc
  1851  01CB  0CAA               	rrf	___awmod@divisor+1,f
  1852  01CC  0CA9               	rrf	___awmod@divisor,f
  1853  01CD  3EFF               	addlw	-1
  1854  01CE  1D03               	skipz
  1855  01CF  29CA               	goto	u645
  1856  01D0                     l1629:
  1857  01D0  3001               	movlw	1
  1858  01D1  02AE               	subwf	___awmod@counter,f
  1859  01D2  1D03               	btfss	3,2
  1860  01D3  29D5               	goto	u651
  1861  01D4  29D6               	goto	u650
  1862  01D5                     u651:
  1863  01D5  29B9               	goto	l1623
  1864  01D6                     u650:
  1865  01D6                     l1631:
  1866  01D6  082F               	movf	___awmod@sign,w
  1867  01D7  1903               	btfsc	3,2
  1868  01D8  29DA               	goto	u661
  1869  01D9  29DB               	goto	u660
  1870  01DA                     u661:
  1871  01DA  29E0               	goto	l1635
  1872  01DB                     u660:
  1873  01DB                     l1633:
  1874  01DB  09AB               	comf	___awmod@dividend,f
  1875  01DC  09AC               	comf	___awmod@dividend+1,f
  1876  01DD  0AAB               	incf	___awmod@dividend,f
  1877  01DE  1903               	skipnz
  1878  01DF  0AAC               	incf	___awmod@dividend+1,f
  1879  01E0                     l1635:
  1880  01E0  082C               	movf	___awmod@dividend+1,w
  1881  01E1  00AA               	movwf	?___awmod+1
  1882  01E2  082B               	movf	___awmod@dividend,w
  1883  01E3  00A9               	movwf	?___awmod
  1884  01E4                     l433:
  1885  01E4  0008               	return
  1886  01E5                     __end_of___awmod:
  1887                           
  1888                           	psect	text8
  1889  0121                     __ptext8:	
  1890 ;; *************** function ___awdiv *****************
  1891 ;; Defined at:
  1892 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  divisor         2    0[BANK0 ] int 
  1895 ;;  dividend        2    2[BANK0 ] int 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  quotient        2    7[BANK0 ] int 
  1898 ;;  sign            1    6[BANK0 ] unsigned char 
  1899 ;;  counter         1    5[BANK0 ] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  2    0[BANK0 ] int 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       4       0       0       0
  1910 ;;      Locals:         0       4       0       0       0
  1911 ;;      Temps:          0       1       0       0       0
  1912 ;;      Totals:         0       9       0       0       0
  1913 ;;Total ram usage:        9 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    2
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function ___awdiv
  1925  0121                     ___awdiv:
  1926  0121                     l1557:	
  1927                           ;incstack = 0
  1928                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1929                           
  1930  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0123  01A6               	clrf	___awdiv@sign
  1933  0124                     l1559:
  1934  0124  1FA1               	btfss	___awdiv@divisor+1,7
  1935  0125  2927               	goto	u481
  1936  0126  2928               	goto	u480
  1937  0127                     u481:
  1938  0127  292F               	goto	l1565
  1939  0128                     u480:
  1940  0128                     l1561:
  1941  0128  09A0               	comf	___awdiv@divisor,f
  1942  0129  09A1               	comf	___awdiv@divisor+1,f
  1943  012A  0AA0               	incf	___awdiv@divisor,f
  1944  012B  1903               	skipnz
  1945  012C  0AA1               	incf	___awdiv@divisor+1,f
  1946  012D                     l1563:
  1947  012D  01A6               	clrf	___awdiv@sign
  1948  012E  0AA6               	incf	___awdiv@sign,f
  1949  012F                     l1565:
  1950  012F  1FA3               	btfss	___awdiv@dividend+1,7
  1951  0130  2932               	goto	u491
  1952  0131  2933               	goto	u490
  1953  0132                     u491:
  1954  0132  293C               	goto	l1571
  1955  0133                     u490:
  1956  0133                     l1567:
  1957  0133  09A2               	comf	___awdiv@dividend,f
  1958  0134  09A3               	comf	___awdiv@dividend+1,f
  1959  0135  0AA2               	incf	___awdiv@dividend,f
  1960  0136  1903               	skipnz
  1961  0137  0AA3               	incf	___awdiv@dividend+1,f
  1962  0138                     l1569:
  1963  0138  3001               	movlw	1
  1964  0139  00A4               	movwf	??___awdiv
  1965  013A  0824               	movf	??___awdiv,w
  1966  013B  06A6               	xorwf	___awdiv@sign,f
  1967  013C                     l1571:
  1968  013C  01A7               	clrf	___awdiv@quotient
  1969  013D  01A8               	clrf	___awdiv@quotient+1
  1970  013E                     l1573:
  1971  013E  0820               	movf	___awdiv@divisor,w
  1972  013F  0421               	iorwf	___awdiv@divisor+1,w
  1973  0140  1903               	btfsc	3,2
  1974  0141  2943               	goto	u501
  1975  0142  2944               	goto	u500
  1976  0143                     u501:
  1977  0143  297B               	goto	l1593
  1978  0144                     u500:
  1979  0144                     l1575:
  1980  0144  01A5               	clrf	___awdiv@counter
  1981  0145  0AA5               	incf	___awdiv@counter,f
  1982  0146  2952               	goto	l1581
  1983  0147                     l1577:
  1984  0147  3001               	movlw	1
  1985  0148                     u515:
  1986  0148  1003               	clrc
  1987  0149  0DA0               	rlf	___awdiv@divisor,f
  1988  014A  0DA1               	rlf	___awdiv@divisor+1,f
  1989  014B  3EFF               	addlw	-1
  1990  014C  1D03               	skipz
  1991  014D  2948               	goto	u515
  1992  014E                     l1579:
  1993  014E  3001               	movlw	1
  1994  014F  00A4               	movwf	??___awdiv
  1995  0150  0824               	movf	??___awdiv,w
  1996  0151  07A5               	addwf	___awdiv@counter,f
  1997  0152                     l1581:
  1998  0152  1FA1               	btfss	___awdiv@divisor+1,7
  1999  0153  2955               	goto	u521
  2000  0154  2956               	goto	u520
  2001  0155                     u521:
  2002  0155  2947               	goto	l1577
  2003  0156                     u520:
  2004  0156                     l1583:
  2005  0156  3001               	movlw	1
  2006  0157                     u535:
  2007  0157  1003               	clrc
  2008  0158  0DA7               	rlf	___awdiv@quotient,f
  2009  0159  0DA8               	rlf	___awdiv@quotient+1,f
  2010  015A  3EFF               	addlw	-1
  2011  015B  1D03               	skipz
  2012  015C  2957               	goto	u535
  2013  015D  0821               	movf	___awdiv@divisor+1,w
  2014  015E  0223               	subwf	___awdiv@dividend+1,w
  2015  015F  1D03               	skipz
  2016  0160  2963               	goto	u545
  2017  0161  0820               	movf	___awdiv@divisor,w
  2018  0162  0222               	subwf	___awdiv@dividend,w
  2019  0163                     u545:
  2020  0163  1C03               	skipc
  2021  0164  2966               	goto	u541
  2022  0165  2967               	goto	u540
  2023  0166                     u541:
  2024  0166  296E               	goto	l1589
  2025  0167                     u540:
  2026  0167                     l1585:
  2027  0167  0820               	movf	___awdiv@divisor,w
  2028  0168  02A2               	subwf	___awdiv@dividend,f
  2029  0169  0821               	movf	___awdiv@divisor+1,w
  2030  016A  1C03               	skipc
  2031  016B  03A3               	decf	___awdiv@dividend+1,f
  2032  016C  02A3               	subwf	___awdiv@dividend+1,f
  2033  016D                     l1587:
  2034  016D  1427               	bsf	___awdiv@quotient,0
  2035  016E                     l1589:
  2036  016E  3001               	movlw	1
  2037  016F                     u555:
  2038  016F  1003               	clrc
  2039  0170  0CA1               	rrf	___awdiv@divisor+1,f
  2040  0171  0CA0               	rrf	___awdiv@divisor,f
  2041  0172  3EFF               	addlw	-1
  2042  0173  1D03               	skipz
  2043  0174  296F               	goto	u555
  2044  0175                     l1591:
  2045  0175  3001               	movlw	1
  2046  0176  02A5               	subwf	___awdiv@counter,f
  2047  0177  1D03               	btfss	3,2
  2048  0178  297A               	goto	u561
  2049  0179  297B               	goto	u560
  2050  017A                     u561:
  2051  017A  2956               	goto	l1583
  2052  017B                     u560:
  2053  017B                     l1593:
  2054  017B  0826               	movf	___awdiv@sign,w
  2055  017C  1903               	btfsc	3,2
  2056  017D  297F               	goto	u571
  2057  017E  2980               	goto	u570
  2058  017F                     u571:
  2059  017F  2985               	goto	l1597
  2060  0180                     u570:
  2061  0180                     l1595:
  2062  0180  09A7               	comf	___awdiv@quotient,f
  2063  0181  09A8               	comf	___awdiv@quotient+1,f
  2064  0182  0AA7               	incf	___awdiv@quotient,f
  2065  0183  1903               	skipnz
  2066  0184  0AA8               	incf	___awdiv@quotient+1,f
  2067  0185                     l1597:
  2068  0185  0828               	movf	___awdiv@quotient+1,w
  2069  0186  00A1               	movwf	?___awdiv+1
  2070  0187  0827               	movf	___awdiv@quotient,w
  2071  0188  00A0               	movwf	?___awdiv
  2072  0189                     l420:
  2073  0189  0008               	return
  2074  018A                     __end_of___awdiv:
  2075                           
  2076                           	psect	text9
  2077  026E                     __ptext9:	
  2078 ;; *************** function _isr *****************
  2079 ;; Defined at:
  2080 ;;		line 72 in file "Main_maestro.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0
  2096 ;;      Temps:          4       0       0       0       0
  2097 ;;      Totals:         4       0       0       0       0
  2098 ;;Total ram usage:        4 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    1
  2101 ;; This function calls:
  2102 ;;		_mandar_datos
  2103 ;; This function is called by:
  2104 ;;		Interrupt level 1
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function _isr
  2110  026E                     _isr:
  2111  026E                     i1l1331:
  2112                           
  2113                           ;Main_maestro.c: 75:     if (PIR1bits.TXIF)
  2114  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2115  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0270  1E0C               	btfss	12,4	;volatile
  2117  0271  2A73               	goto	u45_21
  2118  0272  2A74               	goto	u45_20
  2119  0273                     u45_21:
  2120  0273  2A80               	goto	i1l1339
  2121  0274                     u45_20:
  2122  0274                     i1l1333:
  2123                           
  2124                           ;Main_maestro.c: 76:     {;Main_maestro.c: 77:         cuenta_uart++;
  2125  0274  3001               	movlw	1
  2126  0275  00F2               	movwf	??_isr
  2127  0276  0872               	movf	??_isr,w
  2128  0277  07F6               	addwf	_cuenta_uart,f
  2129  0278                     i1l1335:
  2130                           
  2131                           ;Main_maestro.c: 78:         mandar_datos();
  2132  0278  120A  118A  2298  120A  118A  	fcall	_mandar_datos
  2133  027D                     i1l1337:
  2134                           
  2135                           ;Main_maestro.c: 79:         PIR1bits.TXIF=0;
  2136  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2137  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2138  027F  120C               	bcf	12,4	;volatile
  2139  0280                     i1l1339:
  2140                           
  2141                           ;Main_maestro.c: 82:     if (INTCONbits.T0IF)
  2142  0280  1D0B               	btfss	11,2	;volatile
  2143  0281  2A83               	goto	u46_21
  2144  0282  2A84               	goto	u46_20
  2145  0283                     u46_21:
  2146  0283  2A8F               	goto	i1l81
  2147  0284                     u46_20:
  2148  0284                     i1l1341:
  2149                           
  2150                           ;Main_maestro.c: 83:     {;Main_maestro.c: 84:         cuenta1_timer0++;
  2151  0284  3001               	movlw	1
  2152  0285  00F2               	movwf	??_isr
  2153  0286  0872               	movf	??_isr,w
  2154  0287  07BB               	addwf	_cuenta1_timer0,f
  2155                           
  2156                           ;Main_maestro.c: 85:         cuenta2_timer0++;
  2157  0288  3001               	movlw	1
  2158  0289  00F2               	movwf	??_isr
  2159  028A  0872               	movf	??_isr,w
  2160  028B  07F7               	addwf	_cuenta2_timer0,f
  2161  028C                     i1l1343:
  2162                           
  2163                           ;Main_maestro.c: 86:         INTCONbits.T0IF=0;
  2164  028C  110B               	bcf	11,2	;volatile
  2165  028D                     i1l1345:
  2166                           
  2167                           ;Main_maestro.c: 87:         TMR0 = 255;
  2168  028D  30FF               	movlw	255
  2169  028E  0081               	movwf	1	;volatile
  2170  028F                     i1l81:
  2171  028F  0875               	movf	??_isr+3,w
  2172  0290  008A               	movwf	10
  2173  0291  0874               	movf	??_isr+2,w
  2174  0292  0084               	movwf	4
  2175  0293  0E73               	swapf	??_isr+1,w
  2176  0294  0083               	movwf	3
  2177  0295  0EFE               	swapf	btemp,f
  2178  0296  0E7E               	swapf	btemp,w
  2179  0297  0009               	retfie
  2180  0298                     __end_of_isr:
  2181                           
  2182                           	psect	intentry
  2183  0004                     __pintentry:	
  2184                           ;incstack = 0
  2185                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2186                           
  2187  0004                     interrupt_function:
  2188  007E                     saved_w	set	btemp
  2189  0004  00FE               	movwf	btemp
  2190  0005  0E03               	swapf	3,w
  2191  0006  00F3               	movwf	??_isr+1
  2192  0007  0804               	movf	4,w
  2193  0008  00F4               	movwf	??_isr+2
  2194  0009  080A               	movf	10,w
  2195  000A  00F5               	movwf	??_isr+3
  2196  000B  120A  118A  2A6E   	ljmp	_isr
  2197                           
  2198                           	psect	text10
  2199  0298                     __ptext10:	
  2200 ;; *************** function _mandar_datos *****************
  2201 ;; Defined at:
  2202 ;;		line 220 in file "Main_maestro.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0
  2218 ;;      Temps:          2       0       0       0       0
  2219 ;;      Totals:         2       0       0       0       0
  2220 ;;Total ram usage:        2 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_isr
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           
  2230                           ;psect for function _mandar_datos
  2231  0298                     _mandar_datos:
  2232  0298                     i1l1159:	
  2233                           ;incstack = 0
  2234                           ; Regs used in _mandar_datos: [wreg-fsr0h+status,2+status,0]
  2235                           
  2236                           
  2237                           ;Main_maestro.c: 222:     switch(cuenta_uart)
  2238  0298  2A9B               	goto	i1l1165
  2239  0299                     i1l1161:
  2240                           
  2241                           ;Main_maestro.c: 254:             cuenta_uart=0;
  2242  0299  01F6               	clrf	_cuenta_uart
  2243                           
  2244                           ;Main_maestro.c: 255:             break;
  2245  029A  2ABD               	goto	i1l112
  2246  029B                     i1l1165:
  2247  029B  0876               	movf	_cuenta_uart,w
  2248  029C  00F0               	movwf	??_mandar_datos
  2249  029D  01F1               	clrf	??_mandar_datos+1
  2250                           
  2251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2252                           ; Switch size 1, requested type "simple"
  2253                           ; Number of cases is 1, Range of values is 0 to 0
  2254                           ; switch strategies available:
  2255                           ; Name         Instructions Cycles
  2256                           ; simple_byte            4     3 (average)
  2257                           ; direct_byte           11     8 (fixed)
  2258                           ; jumptable            260     6 (fixed)
  2259                           ;	Chosen strategy is simple_byte
  2260  029E  0871               	movf	??_mandar_datos+1,w
  2261  029F  3A00               	xorlw	0	; case 0
  2262  02A0  1903               	skipnz
  2263  02A1  2AA3               	goto	i1l1743
  2264  02A2  2ABD               	goto	i1l112
  2265  02A3                     i1l1743:
  2266                           
  2267                           ; Switch size 1, requested type "simple"
  2268                           ; Number of cases is 8, Range of values is 1 to 8
  2269                           ; switch strategies available:
  2270                           ; Name         Instructions Cycles
  2271                           ; simple_byte           25    13 (average)
  2272                           ; direct_byte           35    11 (fixed)
  2273                           ; jumptable            263     9 (fixed)
  2274                           ;	Chosen strategy is simple_byte
  2275  02A3  0870               	movf	??_mandar_datos,w
  2276  02A4  3A01               	xorlw	1	; case 1
  2277  02A5  1903               	skipnz
  2278  02A6  2ABD               	goto	i1l112
  2279  02A7  3A03               	xorlw	3	; case 2
  2280  02A8  1903               	skipnz
  2281  02A9  2ABD               	goto	i1l112
  2282  02AA  3A01               	xorlw	1	; case 3
  2283  02AB  1903               	skipnz
  2284  02AC  2ABD               	goto	i1l112
  2285  02AD  3A07               	xorlw	7	; case 4
  2286  02AE  1903               	skipnz
  2287  02AF  2ABD               	goto	i1l112
  2288  02B0  3A01               	xorlw	1	; case 5
  2289  02B1  1903               	skipnz
  2290  02B2  2ABD               	goto	i1l112
  2291  02B3  3A03               	xorlw	3	; case 6
  2292  02B4  1903               	skipnz
  2293  02B5  2ABD               	goto	i1l112
  2294  02B6  3A01               	xorlw	1	; case 7
  2295  02B7  1903               	skipnz
  2296  02B8  2ABD               	goto	i1l112
  2297  02B9  3A0F               	xorlw	15	; case 8
  2298  02BA  1903               	skipnz
  2299  02BB  2A99               	goto	i1l1161
  2300  02BC  2ABD               	goto	i1l112
  2301  02BD                     i1l112:
  2302  02BD  0008               	return
  2303  02BE                     __end_of_mandar_datos:
  2304  007E                     btemp	set	126	;btemp
  2305  007E                     wtemp0	set	126
  2306                           
  2307                           	psect	config
  2308                           
  2309                           ;Config register CONFIG1 @ 0x2007
  2310                           ;	Oscillator Selection bits
  2311                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2312                           ;	Watchdog Timer Enable bit
  2313                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2314                           ;	Power-up Timer Enable bit
  2315                           ;	PWRTE = OFF, PWRT disabled
  2316                           ;	RE3/MCLR pin function select bit
  2317                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2318                           ;	Code Protection bit
  2319                           ;	CP = OFF, Program memory code protection is disabled
  2320                           ;	Data Code Protection bit
  2321                           ;	CPD = OFF, Data memory code protection is disabled
  2322                           ;	Brown Out Reset Selection bits
  2323                           ;	BOREN = OFF, BOR disabled
  2324                           ;	Internal External Switchover bit
  2325                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2326                           ;	Fail-Safe Clock Monitor Enabled bit
  2327                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2328                           ;	Low Voltage Programming Enable bit
  2329                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2330                           ;	In-Circuit Debugger Mode bit
  2331                           ;	DEBUG = 0x1, unprogrammed default
  2332  2007                     	org	8199
  2333  2007  20D4               	dw	8404
  2334                           
  2335                           ;Config register CONFIG2 @ 0x2008
  2336                           ;	Brown-out Reset Selection bit
  2337                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2338                           ;	Flash Program Memory Self Write Enable bits
  2339                           ;	WRT = OFF, Write protection off
  2340  2008                     	org	8200
  2341  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     19      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_mandar_datos

Critical Paths under _main in BANK0

    _main->___awmod
    _setup->_spiInit
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2836
                                             16 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     487
                         _osc_config
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _osc_config                                           3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1153
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1165
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              2 COMMON     4     4      0
                       _mandar_datos
 ---------------------------------------------------------------------------------
 (4) _mandar_datos                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _osc_config
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)
   _mandar_datos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      1E       5       37.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 03 01:51:53 2021

            _SSPSTATbits 0094                       l92 004E                       l88 002A  
                     l99 0234             ___awdiv@sign 0026                      l123 026D  
                    l170 02EB                      l163 02D6                      l420 0189  
                    l164 02DB                      l181 02E4                      l173 02F1  
                    l167 02E5                      l433 01E4                      u250 02EB  
                    u251 02EA                      u500 0144                      u501 0143  
                    u520 0156                      u600 01A7                      u521 0155  
                    u601 01A6                      u515 0148                      u540 0167  
                    u620 01B9                      u541 0166                      u621 01B8  
                    u630 01C3                      u470 02CA                      u535 0157  
                    u631 01C2                      u615 01AB                      u471 02C9  
                    u560 017B                      u480 0128                      u561 017A  
                    u545 0163                      u481 0127                      u570 0180  
                    u490 0133                      u650 01D6                      u571 017F  
                    u555 016F                      u491 0132                      u651 01D5  
                    u635 01BF                      u660 01DB                      u580 0191  
                    u661 01DA                      u645 01CA                      u581 0190  
                    u590 019C                      u591 019B                      _isr 026E  
                    fsr0 0004             ___awmod@sign 002F                     l1243 02DC  
                   l1501 01FA                     l1157 02E5                     l1245 02E1  
                   l1511 01FF                     l1503 01FB                     l1601 018A  
                   l1521 0218                     l1513 0203                     l1505 01FC  
                   l1611 019C                     l1603 018D                     l1451 023F  
                   l1531 0222                     l1523 0219                     l1515 0209  
                   l1507 01FD                     l1621 01B5                     l1613 01A1  
                   l1605 0191                     l1461 0251                     l1453 0241  
                   l1541 0229                     l1533 0223                     l1525 021C  
                   l1517 0214                     l1509 01FE                     l1623 01B9  
                   l1615 01A7                     l1631 01D6                     l1607 0196  
                   l1463 0255                     l1455 0247                     l1447 0238  
                   l1551 0230                     l1543 022A                     l1535 0226  
                   l1527 021F                     l1519 0217                     l1561 0128  
                   l1633 01DB                     l1625 01C3                     l1617 01AA  
                   l1609 0198                     l1457 0249                     l1449 0239  
                   l1481 02D0                     l1553 0233                     l1545 022B  
                   l1537 0227                     l1529 0221                     l1641 002C  
                   l1571 013C                     l1563 012D                     l1635 01E0  
                   l1627 01C9                     l1619 01B1                     l1459 024F  
                   l1467 0257                     l1483 02D5                     l1475 02C1  
                   l1547 022C                     l1539 0228                     l1491 01EE  
                   l1555 02EF                     l1643 003D                     l1651 006D  
                   l1581 0152                     l1573 013E                     l1565 012F  
                   l1557 0121                     l1629 01D0                     l1741 025F  
                   l1477 02CA                     l1549 022F                     l1493 01EF  
                   l1485 01E5                     l1661 0119                     l1653 0105  
                   l1645 0050                     l1591 0175                     l1583 0156  
                   l1575 0144                     l1567 0133                     l1559 0124  
                   l1479 02CE                     l1495 01F0                     l1487 01EC  
                   l1663 011B                     l1655 010A                     l1639 0024  
                   l1585 0167                     l1577 0147                     l1593 017B  
                   l1569 0138                     l1497 01F5                     l1489 01ED  
                   l1657 010F                     l1649 0052                     l1595 0180  
                   l1587 016D                     l1579 014E                     l1499 01F7  
                   l1659 0114                     l1739 005C                     l1597 0185  
                   l1589 016E                     ?_isr 0070                     i1l81 028F  
                   _TMR0 0001                     _main 0024           _cuenta1_timer0 003B  
                   btemp 007E           _cuenta2_timer0 0077                     start 000E  
         osc_config@freq 0022                    ??_isr 0072            ?_mandar_datos 0070  
                  ?_main 0070          __end_of___awdiv 018A          __end_of___awmod 01E5  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l112 02BD  
        ___awdiv@counter 0025                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    u45_20 0274                    u45_21 0273  
                  u46_20 0284                    u46_21 0283                    _TRISB 0086  
                  _TRISD 0088                    _setup 01E5                    pclath 000A  
        __end_of_spiInit 02DC          __end_of_spiRead 02E5                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0121  
         ??_mandar_datos 0070                   ??_main 0030         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1161 0299  
                 i1l1331 026E                   i1l1165 029B                   i1l1341 0284  
                 i1l1333 0274                   i1l1159 0298                   i1l1343 028C  
                 i1l1335 0278                   i1l1345 028D                   i1l1337 027D  
                 i1l1339 0280                   i1l1743 02A3                   _SPBRGH 009A  
                 _TRISC3 043B                   _SSPCON 0014                   _SSPBUF 0013  
              ??___awdiv 0024                ??___awmod 002D         ___awdiv@quotient 0027  
        ___awmod@divisor 0029          ___awmod@counter 002E                   saved_w 007E  
       __end_of_spiWrite 02F2                ??_spiInit 0076                ??_spiRead 0076  
__end_of__initialization 0020           __pcstackCOMMON 0070            __end_of_setup 0235  
         _OPTION_REGbits 0081                  ??_setup 0076               __pbssBANK0 0033  
   __end_of_mandar_datos 02BE               __pmaintext 0024               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                ___awdiv 0121                  ___awmod 018A                  __ptext1 02EC  
                __ptext2 02DC                  __ptext3 02E5                  __ptext4 01E5  
                __ptext5 02BE                  __ptext6 0235                  __ptext7 018A  
                __ptext8 0121                  __ptext9 026E             __size_of_isr 002A  
       ___awmod@dividend 002B                  _spiInit 02BE                  _spiRead 02DC  
   end_of_initialization 0020               _osc_config 0235                _RCSTAbits 0018  
             ??_spiWrite 0076                _PORTCbits 0007                _TRISCbits 0087  
  __size_of_mandar_datos 0026              spiWrite@dat 0020                _TXSTAbits 0098  
         _spiReceiveWait 02E5             _mandar_datos 0298              _BAUDCTLbits 0187  
    start_initialization 0011             _map_pot1_dec 0039             _map_pot1_cen 003A  
            __end_of_isr 0298             _map_pot2_dec 0037             _map_pot2_cen 0038  
            ?_osc_config 0070   __end_of_spiReceiveWait 02EC              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
               ?___awdiv 0020                 ?___awmod 0029           _uart_recibido1 003D  
         _uart_recibido2 003C        __size_of_spiWrite 0006      __size_of_osc_config 0039  
               ?_spiInit 0020                 ?_spiRead 0070           __size_of_setup 0050  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F              _cuenta_uart 0076            _uart_dec_pot1 0035  
          _uart_dec_pot2 0033         __size_of___awdiv 0069         __size_of___awmod 005B  
          _uart_cen_pot1 0036            _uart_cen_pot2 0034                 __ptext10 0298  
       __size_of_spiInit 001E         __size_of_spiRead 0009             ??_osc_config 0020  
          __size_of_main 00FD                 _spiWrite 02EC             spiInit@sType 0023  
      spiInit@sClockIdle 0021               _INTCONbits 000B       __end_of_osc_config 026E  
               intlevel1 0000         ??_spiReceiveWait 0076               _OSCCONbits 008F  
